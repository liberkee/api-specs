openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/hufsm/vehilce-mgmt-api/1.0.0
info:
  title: Liberkee - Vehicle Management API
  description: This API is designed to synchronize and manage the vehicles of your system that are shared with our system.
  version: "1.0.0"
  contact:
    email: support@liberkee.com
  license:
    name: Liberkee 1.0
    url: 'http://www.liberkee.com'
tags:
  - name: Vehicle Management
    description: Vehicle related actions and end points.
  - name: Location Management
    description: Location related actions and end points.
paths:
# auth {{{ #
  /auth:
    post:
      summary: Login and retrieve a login token.
      operationId: postAuth
      description: |
        Send username and password information and retrieve an auth token in the response which
        shall be used in every request to read, create, update and delete vehicle and location resources.
      responses:
        '200':
          description: Login succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Invalid input/required property not set.
        '401':
          description: Unauthorized.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
        description: Login data for retrieving an auth token.
      tags:
        - Auth
# }}} auth #
# entity {{{ #
  /entity:
    get:
      summary: Get entity from IoT database.
      operationId: getEntity
      description: |
        Get the details of a specific entity (device or asset/vehicle) by querying for either the 'deviceName', 'externalVehicleRef' or the 'label'.
      parameters:
        - name: X-Authorization
          in: header
          description: Internal auth token. Can't be retrieved by /auth route.
          required: true
          schema:
            type: string
            example: 'iOiJIUzUxMiJ9.eyJzdWIiOiJ'
        - name: deviceName
          in: query
          description: Name of the device for which the details shall be returned.
          required: false
          schema:
            type: string
            example: '0f4d2810-8288-11eb-9770-37432bab8c9d'
        - name: externalVehicleRef
          in: query
          description: External vehicle reference of the asset/vehicle for which the details shall be returned.
          required: false
          schema:
            type: string
            example: 'JH4DA9470PS008042@liberkee'
        - name: label
          in: query
          description: Label of the device for which the details shall be returned.
          required: false
          schema:
            type: string
            example: '20030515QA3259:359315079659388'
      responses:
        '200':
          description: Login succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entity'
        '400':
          description: Invalid input/required property not set.
        '401':
          description: Unauthorized.
        '404':
          description: Item not found.
      tags:
        - Entity
  /entities:
    get:
      summary: Get entities from IoT database.
      operationId: getEntities
      description: |
        Get a list of entities by optionally querying for 'customerTitle'.
        Group the list by 'asset' or 'device' using query parameter 'groupBy'.
      parameters:
        - name: X-Authorization
          in: header
          description: Internal auth token. Can't be retrieved by /auth route.
          required: true
          schema:
            type: string
            example: 'iOiJIUzUxMiJ9.eyJzdWIiOiJ'
        - name: customerTitle
          in: query
          description: Title of the csutomer for which the entities shall be returned.
          required: false
          schema:
            type: string
            example: 'liberkee'
        - name: groupBy
          in: query
          description: Group the entities by 'asset' (vehicle) or 'device'. Defaults to 'device'.
          required: false
          schema:
            type: string
            example: 'device'
      responses:
        '200':
          description: .
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityList'
        '400':
          description: Invalid input/required property not set.
        '401':
          description: Unauthorized.
        '404':
          description: Item not found.
      tags:
        - Entity
# }}} entity #
# vehicles {{{ #
  /vehicles:
    get:
      summary: Get all vehicles available for the current user.
      operationId: getVehicles
      description: |
        Receive all vehicle data which is available for the current user.

        Filter the vehicle list to only contain the vehicles of a specific location by using the corresponding query parameter.

        All vehicles of the users home location as well as all vehicles of the home locations sub-locations will be fetched by this request.

        | key | description | example |
        |-|-|-|
        | brand | manufacturer of the vehicle | Nissan |
        | model | vehicle model | Altima |
        | externalVehicleRef | vehicle reference/ID which identifies the vehicle in the Liberkee and in the partner system/VIN can be used | 1FTFW1ET3BKD42728 |
        | vin | vehicle identification number | 1FTFW1ET3BKD42728 |
        | licensePlate | number plate/license plate of the vehicle | ME-HF 333 |
        | modelYear | vehicle construction year | 2020 |
        | location | location in which the vehicle is located | Liberkee Velbert |
      parameters:
        - name: X-Authorization
          in: header
          description: Authentication header
          required: true
          schema:
            type: string
            example: 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqQGh1ZnNtLmNvbSIsInNj...b3BlcyI6WyJDVVNUT01F'
        - name: homeLocationId
          in: query
          description: Filter vehicle list for vehicles based in this location.
          required: false
          schema:
            type: string
            format: uuid
            example: 0b2734b2-0d55-4502-9b54-3d9aaafc2177
      responses:
        '200':
          description: Search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vehicle'
        '401':
          description: Unauthorized
      tags:
        - Vehicle Management

  /vehicles/{externalVehicleRef}:
    get:
      summary: Get the information for the vehicle referenced by externalVehicleRef.
      operationId: getVehicle
      description: |
        Receive vehicle data for the given vehicle, referenced by your vehicle reference number.

        | key | description | example |
        |-|-|-|
        | brand | manufacturer of the vehicle | Nissan |
        | model | vehicle model | Altima |
        | externalVehicleRef | vehicle reference/ID which identifies the vehicle in the Liberkee and in the partner system/VIN can be used | 1FTFW1ET3BKD42728 |
        | vin | vehicle identification number | 1FTFW1ET3BKD42728 |
        | licensePlate | number plate/license plate of the vehicle | ME-HF 333 |
        | modelYear | vehicle construction year | 2020 |
        | location | location in which the vehicle is located | Liberkee Velbert |
      parameters:
        - name: X-Authorization
          in: header
          description: Authentication header
          required: true
          schema:
            type: string
            example: 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqQGh1ZnNtLmNvbSIsInNj...b3BlcyI6WyJDVVNUT01F'
        - name: externalVehicleRef
          in: path
          description: Reference to the vehicle from your system.
          required: true
          schema:
            type: string
            format: uuid
            example: 0b2734b2-0d55-4502-9b54-3d9aaafc2177
      responses:
        '200':
          description: Search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        '401':
          description: Unauthorized.
        '404':
          description: Vehicle not found.
      tags:
        - Vehicle Management
    put:
      summary: Update an existing vehicle.
      operationId: putVehicleId
      description: |
        Update the vehicle details of an existing vehicle.

        By providing a new `homeLocationId` attribute in the request body, the vehicle will be moved to the new location.
      parameters:
        - name: X-Authorization
          in: header
          description: Authentication header
          required: true
          schema:
            type: string
            example: 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqQGh1ZnNtLmNvbSIsInNj...b3BlcyI6WyJDVVNUT01F'
        - name: externalVehicleRef
          in: path
          description: Reference to the vehicle from your system.
          required: true
          schema:
            type: string
            example: VNKKG3031OA124967
      responses:
        '201':
          description: Item updated.
        '400':
          description: Invalid input/required property not set.
        '401':
          description: Unauthorized
        '404':
          description: Item not found.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleUpdate'
        description: location data
      tags:
        - Vehicle Management
    delete:
      summary: Delete a vehicle.
      operationId: deleteVehicleId
      description: |
        Delete a vehicle. You can only delete a vehicle if it has no relations assigned (devices installed).
      parameters:
        - name: X-Authorization
          in: header
          description: Authentication header
          required: true
          schema:
            type: string
            example: 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqQGh1ZnNtLmNvbSIsInNj...b3BlcyI6WyJDVVNUT01F'
        - name: externalVehicleRef
          in: path
          description: Reference to the vehicle from your system.
          required: true
          schema:
            type: string
            example: VNKKG3031OA124967
      responses:
        '204':
          description: Item deleted.
        '400':
          description: Invalid input/required property not set.
        '401':
          description: Unauthorized
        '404':
          description: Item not found.
        '409':
          description: Item still has device relations.
      tags:
        - Vehicle Management
    
  /vehicle/{homeLocationId}:
    post:
      summary: Add a new vehicle to a location
      operationId: postVehicleHomeLocationId
      description: |
        Add a new vehicle in one of the locations the current user has access to by providing the `homeLocationId` as path
        parameter.

        | key | description | example |
        |-|-|-|
        | brand | manufacturer of the vehicle | Nissan |
        | model | vehicle model | Altima |
        | externalVehicleRef | vehicle reference/ID which identifies the vehicle in the Liberkee and in the partner system/VIN can be used | 1FTFW1ET3BKD42728 |
        | vin | vehicle identification number | 1FTFW1ET3BKD42728 |
        | licensePlate | number plate/license plate of the vehicle | ME-HF 333 |
        | modelYear | vehicle construction year | 2020 |
        | hufVehicleTypeId | vehicle configuration id | 000156_VW_Golf_2017-2020 |
      parameters:
        - name: X-Authorization
          in: header
          description: Authentication header
          required: true
          schema:
            type: string
            example: 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqQGh1ZnNtLmNvbSIsInNj...b3BlcyI6WyJDVVNUT01F'
        - name: homeLocationId
          in: path
          description: ID of the home location of the new vehicle.
          required: true
          schema:
            type: string
            format: uuid
            example: 0b2734b2-0d55-4502-9b54-3d9aaafc2177
      responses:
        '201':
          description: Item created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleCreated'
        '400':
          description: Invalid input/required property not set.
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. Missing permissions on homeLocationId?
        '404':
          description: Home location not found.
        '409':
          description: An item with that ID already exists.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vehicle'
      tags:
        - Vehicle Management
# }}} vehicles #
# Locations {{{ #
  /locations:
    get:
      tags:
        - Location Management
      summary: Get all locations available for the current user.
      operationId: getLocations
      description: |
        Receive all locations available for the current user.
      parameters:
        - name: X-Authorization
          in: header
          description: Authentication header
          required: true
          schema:
            type: string
            example: 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqQGh1ZnNtLmNvbSIsInNj...b3BlcyI6WyJDVVNUT01F'
        - name: hierarchy
          in: query
          description: Set to "true" to get hierarchical list.
          required: false
          schema:
            type: string
            example: 'true'
      responses:
        '200':
          description: Search results matching criteria.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
        '401':
          description: Unauthorized

  /locations/{locationId}:
    get:
      tags:
        - Location Management
      summary: Get the information about a single location.
      operationId: getLocation
      description: |
        Get the information about a single location.
      parameters:
        - name: X-Authorization
          in: header
          description: Authentication header
          required: true
          schema:
            type: string
            example: 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqQGh1ZnNtLmNvbSIsInNj...b3BlcyI6WyJDVVNUT01F'
        - name: locationId
          in: path
          description: ID of the location to view.
          required: true
          schema:
            type: string
            format: uuid
            example: 7e72593d-2912-484b-806e-0f57c2accb61
      responses:
        '200':
          description: Search results matching criteria.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
        '401':
          description: Unauthorized
    put:
      tags:
        - Location Management
      summary: Update an existing location.
      operationId: putLocationLocationId
      description: |
        Update an existing location use the `locationId` to specify which location you want to change.
        
        This PUT request does not create a location if it does not exist. You can only use it to update existing locations.
      parameters:
        - name: X-Authorization
          in: header
          description: Authentication header
          required: true
          schema:
            type: string
            example: 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqQGh1ZnNtLmNvbSIsInNj...b3BlcyI6WyJDVVNUT01F'
        - name: locationId
          in: path
          description: ID of the location to be updated
          required: true
          schema:
            type: string
            format: uuid
            example: 7e72593d-2912-484b-806e-0f57c2accb61
      responses:
        '201':
          description: item updated
        '400':
          description: invalid input/required property not set
        '401':
          description: Unauthorized
        '404':
          description: Location or new parent location could not be found.
        '409':
          description: an item with that ID already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationUpdate'
        description: Location data.
    delete:
      tags:
        - Location Management
      summary: Delete an existing location.
      operationId: deleteLocationLocationId
      description: |
        Delete an existing location. A location can only be deleted if it contains no vehicles, so make sure to delete
        or move all vehicles before trying to delete a location.
      parameters:
        - name: X-Authorization
          in: header
          description: Authentication header
          required: true
          schema:
            type: string
            example: 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqQGh1ZnNtLmNvbSIsInNj...b3BlcyI6WyJDVVNUT01F'
        - name: locationId
          in: path
          description: ID of the location to be deleted
          required: true
          schema:
            type: string
            format: uuid
            example: 7e72593d-2912-484b-806e-0f57c2accb61
      responses:
        '204':
          description: item deleted
        '400':
          description: invalid location uuid;
        '401':
          description: Unauthorized
        '404':
          description: location not found
        '409':
          description: location still contains vehicles

  /location/{parentLocationId}:
    post:
      tags:
        - Location Management
      summary: Add a new location to an existing location
      operationId: postLocationParentLocationId
      description: |
        Add a new location by providing the parentLocationId as path parameter.

        Leave the parameter for `parentLocationId` blank (`""`) to add a new top level location.
      parameters:
        - name: X-Authorization
          in: header
          description: Authentication header
          required: true
          schema:
            type: string
            example: 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqQGh1ZnNtLmNvbSIsInNj...b3BlcyI6WyJDVVNUT01F'
        - name: parentLocationId
          in: path
          description: ID of the parent location to add the new location to.
          required: true
          schema:
            type: string
            example: 0
      responses:
        '200':
          description: Item created, locationId returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationCreated'
        '400':
          description: invalid input/required property not set
        '401':
          description: Unauthorized
        '403':
          description: Forbidden. Missing permissions on parentLocationId?
        '404':
          description: Parent location was not found.
        '409':
          description: an item with that ID already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationCreate'
# }}}  #
components:
  schemas:
    AuthRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: john.doe@liberkee.com
        password:
          type: string
          example: super_secret-password!=?
    AuthResponse:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          example: 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJqQGh1ZnNtLmNvbSIsInNj...b3BlcyI6WyJDVVNUT01F'
        message:
          type: string
          example: 'Use as X-Authorization header token'
    Asset:
      type: object
      properties:
        device:
          type: object
          properties:
            asset_details:
              $ref: '#/components/schemas/AssetDetails'
            asset_attributes:
              $ref: '#/components/schemas/AssetAttributes'
            asset_additional_information:
              $ref: '#/components/schemas/AssetAdditionalInformation'
            asset_relation:
              type: array
              items:
                type: object
                properties:
                  asset:
                    type: object
                    properties:
                      device_details:
                        $ref: '#/components/schemas/DeviceDetails'
                      device_attributes:
                        $ref: '#/components/schemas/DeviceAttributes'
                      device_additional_information:
                        $ref: '#/components/schemas/DeviceAdditionalInformation'
                      device_customer:
                        $ref: '#/components/schemas/Customer'
            device_customer:
              $ref: '#/components/schemas/Customer'
    AssetAttributes:
      type: object
      description: Contains all TB device attributes, Some examples here in the schema.
      properties:
        brand:
          type: string
          example: VW
        model:
          type: string
          example: IQ3
        vin:
          type: string
          example: JH4DC4340SS001220
        externalVehicleRef:
          type: string
          example: JH4DC4340SS001220
        hufVehicleTypeId:
          type: string
          example: 000278_VW_IQ3
    AssetAdditionalInformation:
      type: object
      properties:
        entity_uuid:
          type: string
          format: UUID
          example: '587876a0-ec2b-11ea-ac27-9ba6fe0265ed'
        customer_uuid:
          type: string
          format: UUID
          example: '4a3fe120-11b3-11ea-88c8-912295edc6ff'
    AssetDetails:
      type: object
      properties:
        id:
          type: string
          example: 1eaec2b587876a0ac279ba6fe0265ed
        customer_id:
          type: string
          example: 1ea11b34a3fe12088c8912295edc6ff
        type:
          type: string
          enum:
            - Car
          example: Car
        name:
          type: string
          example: 'vehicle01@liberkee'
    Customer:
      type: object
      properties:
        id:
          type: string
          example: 1ea11b34a3fe12088c8912295edc6ff
        additional_info:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
          example: Haberstrasse 46
        address2:
          type: string
          nullable: true
          example: null
        city:
          type: string
          nullable: true
          example: Velbert
        country:
          type: string
          nullable: true
          example: Velbert
        email:
          type: string
          nullable: true
          example: lib@erkee.com
        phone:
          type: string
          nullable: true
          example: '+49 2051 272 0'
        search_text:
          type: string
          example: liberkee
        state:
          type: string
          nullable: true
          example: NRW
        tenant_id:
          type: string
          example: 1ea0a223d60eeb088c8912295edc6ff
        parent_customer_id:
          type: string
          nullable: true
          example: 1ea0a223d60eeb088c8912295edc6fe
        title:
          type: string
          example: liberkee
        zip:
          type: string
          nullable: true
          example: 42551
    Device:
      type: object
      properties:
        device:
          type: object
          properties:
            device_details:
              $ref: '#/components/schemas/DeviceDetails'
            device_attributes:
              $ref: '#/components/schemas/DeviceAttributes'
            device_additional_information:
              $ref: '#/components/schemas/DeviceAdditionalInformation'
            device_relation:
              type: array
              items:
                type: object
                properties:
                  asset:
                    type: object
                    properties:
                      asset_details:
                        $ref: '#/components/schemas/AssetDetails'
                      asset_attributes:
                        $ref: '#/components/schemas/AssetAttributes'
                      asset_additional_information:
                        $ref: '#/components/schemas/AssetAdditionalInformation'
                      asset_customer:
                        $ref: '#/components/schemas/Customer'
            device_customer:
              $ref: '#/components/schemas/Customer'
    DeviceAttributes:
      type: object
      description: Contains all TB device attributes, Some examples here in the schema.
      properties:
        ccid:
          type: string
          example: 89882390000065590815
        sorc_id:
          type: string
          format: UUID
          example: '51454548-96cb-450c-8114-f086491427a8'
        serial_number:
          type: string
          example: 20073110QA2940
        huf_telematic_cert_serial:
          type: string
          example: 48C69CE4D0EDEFE3
        huf_secure_access_cert_serial:
          type: string
          example: 2E1F7B6277A05D5F
        imei:
          type: string
          example: 354679090885438
        imsi:
          type: string
          example: 901288002345199
        currentSoftwareVersion:
          type: string
          example: 0.13.1
        lastActivityTime:
          type: string
          example: 1599573590805
    DeviceAdditionalInformation:
      type: object
      properties:
        entity_uuid:
          type: string
          format: UUID
          example: '587876a0-ec2b-11ea-ac27-9ba6fe0265ed'
        customer_uuid:
          type: string
          format: UUID
          example: '4a3fe120-11b3-11ea-88c8-912295edc6ff'
    DeviceDetails:
      type: object
      properties:
        id:
          type: string
          example: 1eaec2b587876a0ac279ba6fe0265ed
        customer_id:
          type: string
          example: 1ea11b34a3fe12088c8912295edc6ff
        type:
          type: string
          enum:
            - CAM
            - Keyholder
          example: CAM
        name:
          type: string
          format: UUID
          example: '51454548-96cb-450c-8114-f086491427a8'
        label:
          type: string
          example: 20073110QA2940:354679090885438
    Entity:
      oneOf:
        - $ref: '#/components/schemas/Asset'
        - $ref: '#/components/schemas/Device'
    EntityList:
      type: array
      items:
        oneOf:
          - $ref: '#/components/schemas/Asset'
          - $ref: '#/components/schemas/Device'
    Location:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
          example: 6ed71e99-3c76-4512-8a45-e6103ff9a297
        parentLocationId:
          type: string
          format: uuid
          example: 8b3690c0-272e-11eb-9df5-1908aab948b2
        name:
          type: string
          example: Liberkee Velbert
        country:
          type: string
          example: Germany
        state:
          type: string
          example: NRW
        city:
          type: string
          example: Velbert
        zip:
          type: string
          example: "42551"
        address:
          type: string
          example: "Haberstrasse 46"
        address2:
          type: string
          example: "Level 3"
        additionalInfo:
          type: string
          example: "Text that describes something"
        email:
          type: string
          example: "kij@kong.com"
        phone:
          type: string
          example: "+49 2501 272 0"
    LocationCreate:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: Liberkee Velbert
        country:
          type: string
          example: Germany
        state:
          type: string
          example: NRW
        city:
          type: string
          example: Velbert
        zip:
          type: string
          example: "42551"
        address:
          type: string
          example: "Haberstrasse 46"
        address2:
          type: string
          example: "Level 3"
        additionalInfo:
          type: string
          example: "Text that describes something"
        email:
          type: string
          example: "kij@kong.com"
        phone:
          type: string
          example: "+49 2501 272 0"
    LocationCreated:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: Liberkee Velbert
        country:
          type: string
          example: Germany
        state:
          type: string
          example: NRW
        city:
          type: string
          example: Velbert
        zip:
          type: string
          example: "42551"
        address:
          type: string
          example: "Haberstrasse 46"
        address2:
          type: string
          example: "Level 3"
        additionalInfo:
          type: string
          example: "Text that describes something"
        email:
          type: string
          example: "kij@kong.com"
        phone:
          type: string
          example: "+49 2501 272 0"
        parentLocation:
          type: object
          properties:
            id:
              type: string
              format: UUID
              example: 'ba2da3c0-8ae1-11eb-9770-37432bab8c9d'
            name:
              type: string
              example: Liberkee-Germany
        id:
          type: string
          format: UUID
          example: '683c2200-8ae4-11eb-9770-37432bab8c9d'
    LocationUpdate:
      type: object
      properties:
        name:
          type: string
          example: Liberkee Velbert
        parentLocationId:
          type: string
          format: uuid
          example: "6ed71e99-3c76-4512-8a45-e6103ff9a297"
        country:
          type: string
          example: Germany
        state:
          type: string
          example: NRW
        city:
          type: string
          example: Velbert
        zip:
          type: string
          example: "42551"
        address:
          type: string
          example: "Haberstrasse 46"
        address2:
          type: string
          example: "Level 3"
        additionalInfo:
          type: string
          example: "Text that describes something"
        email:
          type: string
          example: "kij@kong.com"
        phone:
          type: string
          example: "+49 2501 272 0"
    Vehicle:
      type: object
      required:
        - externalVehicleRef
      properties:
        id:
          type: string
          format: UUID
          example: '6c0e3bf0-9ce8-11eb-9770-37432bab8c9d'
        externalVehicleRef:
          type: string
          example: 1FTFW1ET3BKD42728
        brand:
          type: string
          example: Nissan
        model:
          type: string
          example: Altima
        vin:
          type: string
          example: 1FTFW1ET3BKD42728
        licensePlate:
          type: string
          example: ME-HF 333
        modelYear:
          type: string
          example: '2020'
        hufVehicleTypeId:
          type: string
          example: '000156_VW_GOLF_2017-2020'
        homeLocation:
          $ref: '#/components/schemas/Location'
        equipedWith:
          type: array
          items:
            type: object
            properties:
              deviceType:
                type: string
                enum:
                  - CAM
                  - Keyholder
                example: CAM
              deviceId:
                type: string
                format: UUID
                example: '4ec3e9a0-9ce8-11eb-9770-37432bab8c9d'
              deviceLabel:
                type: string
                example: '20120214TT1601:354679090890537'
    VehicleCreated:
      type: object
      required:
        - externalVehicleRef
      properties:
        id:
          type: string
          format: UUID
          example: '6c0e3bf0-9ce8-11eb-9770-37432bab8c9d'
        externalVehicleRef:
          type: string
          example: 1FTFW1ET3BKD42728
        brand:
          type: string
          example: Nissan
        model:
          type: string
          example: Altima
        vin:
          type: string
          example: 1FTFW1ET3BKD42728
        licensePlate:
          type: string
          example: ME-HF 333
        modelYear:
          type: string
          example: '2020'
        hufVehicleTypeId:
          type: string
          example: '000156_VW_GOLF_2017-2020'
        homeLocation:
          type: object
          properties:
            id:
              type: string
              example: '675c77c0-8ae1-11eb-9770-37432bab8c9d'
    VehicleUpdate:
      type: object
      required:
        - externalVehicleRef
      properties:
        externalVehicleRef:
          type: string
          example: 1FTFW1ET3BKD42728
        brand:
          type: string
          example: Nissan
        model:
          type: string
          example: Altima
        vin:
          type: string
          example: 1FTFW1ET3BKD42728
        licensePlate:
          type: string
          example: ME-HF 333
        modelYear:
          type: string
          example: '2020'
        hufVehicleTypeId:
          type: string
          example: '000156_VW_GOLF_2017-2020'
        homeLocationId:
          type: string
          format: uuid
          example: 9b075a46-1d4b-46a3-a8ca-14c5e218054d
