swagger: "2.0"
info:
  version: "1.0.0"
  title: SixSense Cloud API - vehicle status HUF
  license:
    name:  Huf Proprietary
  description: |

      ![Brand Logo](./images/sixsense.png)

      ![States Image](./images/pic_huf.jpg)

      # Purpose of the vehicle status API

      This API allows the external system to retrieve status information like fuel level and odometer for individual vehicles.

      To retrieve highly volatile data like GPS position or speed, please refer to the separate "vehicle telematics API".

      # Changelog

      ## 1.0.0
        Approved after review

      ## 0.0.1
        Initial draft for review.

      # Mandatory/optional fields
        - In this specification, all mandatory data fields are marked with a red asterisk character ('*').
        - All other data fields are optional.

      # Time formats

        - All times exchanged over this interface shall be based on UTC (Coordinated Universal Time).
        - All strings representing times shall be formatted according to ISO8601.

      # Units

        - Only SI units and SI derived units are supported.
        - An exception is the widely used unit "litre".

      # Tenant IDs

        - Scenario: One system is exclusively operated for one business customer. The customer may have several logical sub-organizations (e.g. car rental agencies), which are represented as tenants.
        - In the context of *this API section*, tenantIds refer to vehicles ONLY.
        - The tenantId is defined as optional. When left out, the tenant with the name "default" is used by the customer system.
        - If there was no tenantId in the received event, there will also be the tenantId "default" in the resulting events.
        - In requests with a tenantId, Huf ONLY returns and modifies vehicle data related to that tenant.
        - When a received event results in one or more outgoing events, each outgoing event carries the same tenantId that was present in the received event.
        - A tentant ID shall only include letters and numbers, otherwise system behavior is not guaranteed.
          - regular expression: ^[a-zA-Z0-9]+$
        - Tenant IDs are case-senitive, e.g. "carrental" is a different tenant than "CarRental".
        - The following strings are reserved tenant IDs and no specific system behavior is guaranteed when they are used:
          - all, any, none, default (in all possible lower/upper case combinations)

        ![States Image](./images/tenants.jpg)

      # HTTP Status Codes:

        - Unknown event types are accepted by the event handler and 200 is returned. But they will not be processed as no receiver has subscribed to the event type.
        - Known event type with not matching payload is accepted by the event handler and 200 is returned. But the receiver which has subscribed to the event type will generate an error event due to the broken payload.
        - In case 40x HTTP errors are returned, the response body is empty (no correlation ID is returned).

      | Http Code | Description | Information |
      | :---         |     :---      |     :---      |
      | 200 | Success | |
      | 400 | Bad Request | |
      | 401 | Unauthorized | |
      | 403 | Forbidden - Client identified by certificate not authorized to call this request | |
      | 404 | Not Found - externalVehicleRef not found or route suffixed with unknown resource | |
      | 500 | Internal Server Error | |
      | 503 | Service Unavailable | |

host: HOST:PORT
basePath: /api/v1
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json

#PATHS

paths:

## Events

  /vehicles/{externalVehicleRef}/status:
    $ref: "./definitions/paths/get_meta_data.yaml"

definitions:

# Responses

  getMetaDataRsp:
    $ref: "./definitions/responses/getMetaDataRsp.yaml"

  getMetaDataRspNoData:
    $ref: "./definitions/responses/getMetaDataRspNoData.yaml"

# Models

  metaData:
    $ref: "./definitions/models/metaData.yaml"
